apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaoxing-backend
  namespace: chaoxing
  labels:
    app: chaoxing-backend
spec:
  replicas: 2  # 可根据需求调整
  selector:
    matchLabels:
      app: chaoxing-backend
  template:
    metadata:
      labels:
        app: chaoxing-backend
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: backend
        image: ghcr.io/vivi141/chaoxing:latest  # 使用你的镜像
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: chaoxing-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: chaoxing-secrets
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            secretKeyRef:
              name: chaoxing-secrets
              key: REDIS_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            secretKeyRef:
              name: chaoxing-secrets
              key: REDIS_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: chaoxing-secrets
              key: SECRET_KEY
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: chaoxing-secrets
              key: JWT_SECRET_KEY
        - name: DEBUG
          value: "False"
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: chaoxing-backend
  namespace: chaoxing
spec:
  selector:
    app: chaoxing-backend
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  type: ClusterIP

