# 超星学习通 - Docker部署配置
# 简化版，包含所有必要服务
# Python版本: 3.12.8

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:18-alpine
    container_name: chaoxing_postgres
    environment:
      POSTGRES_USER: chaoxing_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      POSTGRES_DB: chaoxing_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis缓存和消息队列
  redis:
    image: redis:7.4-alpine
    container_name: chaoxing_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  # 后端API服务
  backend:
    build:
      context: ..
      dockerfile: web/backend/Dockerfile
    container_name: chaoxing_backend
    command: python start_simple.py
    environment:
      DATABASE_URL: postgresql+asyncpg://chaoxing_user:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/chaoxing_db
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme123}@redis:6379/0
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-changeme123}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD:-changeme123}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-please-change-in-production-minimum-32-chars}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-jwt-secret-key-change-me-minimum-32-chars}
      DEBUG: ${DEBUG:-False}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      DEPLOY_MODE: standard
    volumes:
      - ./backend/logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Celery Worker（异步任务处理）
  celery:
    build:
      context: ..
      dockerfile: web/backend/Dockerfile
    container_name: chaoxing_celery
    command: >
      sh -c "
        echo '🔄 等待数据库就绪...' &&
        python -c 'import time; time.sleep(10)' &&
        echo '🚀 启动Celery Worker...' &&
        celery -A celery_app worker --loglevel=info --concurrency=2 --max-tasks-per-child=1000
      "
    environment:
      DATABASE_URL: postgresql+asyncpg://chaoxing_user:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/chaoxing_db
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme123}@redis:6379/0
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-changeme123}@redis:6379/0
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD:-changeme123}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-please-change-in-production-minimum-32-chars}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-jwt-secret-key-change-me-minimum-32-chars}
      DEPLOY_MODE: standard
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      - postgres
      - redis
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# 使用说明：
# 
# 1. 启动服务：
#    docker compose up -d
#
# 2. 查看日志：
#    docker logs chaoxing_backend
#    docker logs chaoxing_celery
#
# 3. 访问应用：
#    http://localhost:8000
#
# 4. 环境变量（可选）：
#    创建 .env 文件配置：
#    POSTGRES_PASSWORD=your_password
#    REDIS_PASSWORD=your_password
#    SECRET_KEY=your_secret_key
#    JWT_SECRET_KEY=your_jwt_secret_key