# Docker Compose 简化版
# 使用SQLite，无需PostgreSQL和Redis
# 适合快速体验和小规模使用

services:
  # 后端服务（SQLite模式）
  backend:
    image: ghcr.io/vivi141/chaoxing:latest
    # 或从源码构建：
    # build:
    #   context: ..
    #   dockerfile: web/backend/Dockerfile
    container_name: chaoxing_backend
    environment:
      # 使用SQLite数据库（简单模式）
      DATABASE_URL: sqlite:///./data/chaoxing.db
      
      # 应用密钥（生产环境请修改！）
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-me-in-production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-jwt-secret-key-change-me}
      
      # 不使用Redis（可选功能会被禁用）
      REDIS_URL: ""
      CELERY_BROKER_URL: ""
      
      # 调试模式（可选）
      DEBUG: ${DEBUG:-False}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    
    volumes:
      - ./backend/data:/app/data        # SQLite数据库文件
      - ./backend/logs:/app/logs        # 日志文件
      - ./backend/.env:/app/.env        # 配置文件（可选）
    
    ports:
      - "8000:8000"
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# 注意：
# 1. 此配置适合快速体验和小规模使用
# 2. 生产环境建议使用PostgreSQL + Redis（见docker-compose.yml）
# 3. 可以先用此配置启动，后续通过Web界面迁移到PostgreSQL
